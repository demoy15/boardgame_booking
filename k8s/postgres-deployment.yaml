apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16
          ports:
            - containerPort: 5433
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "boardbox"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: postgres-storage
          emptyDir: { }
        - name: init-script
          configMap:
            name: postgres-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5433
      targetPort: 5433
  selector:
    app: postgres
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-script
data:
  init.sql: |
    CREATE TABLE IF NOT EXISTS game
    (
        id
        UUID
        PRIMARY
        KEY,
        title
        VARCHAR
    (
        200
    ) NOT NULL,
        min_players INT,
        max_players INT,
        playtime_min INT
        );
    
    INSERT INTO game (id, title, min_players, max_players, playtime_min)
    VALUES ('11111111-1111-1111-1111-111111111111', 'Catan', 3, 4, 90),
           ('22222222-2222-2222-2222-222222222222', 'Wingspan', 1, 5, 80),
           ('33333333-3333-3333-3333-333333333333', 'Ticket to Ride', 2, 5, 60) ON CONFLICT (id) DO NOTHING;